@page "/accounts"
@inject IAccountService AccountService

<style>
    /* فونت فارسی */
    @@font-face {
        font-family: 'Vazir';
        src: url('/fonts/Vazir.woff') format('woff');
    }

    .accounts-container {
        font-family: 'Vazir', Tahoma, sans-serif;
        direction: rtl;
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 1rem;
    }

    .accounts-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid #e2e8f0;
    }

    .accounts-title {
        color: #1e293b;
        font-size: 1.5rem;
        font-weight: 600;
    }

    .accounts-card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
        overflow: hidden;
    }

    .accounts-table {
        width: 100%;
        border-collapse: collapse;
    }

        .accounts-table thead {
            background-color: #f8fafc;
            border-bottom: 2px solid #e2e8f0;
        }

        .accounts-table th {
            padding: 1rem;
            color: #64748b;
            font-weight: 500;
            text-align: right;
        }

        .accounts-table td {
            padding: 1rem;
            border-bottom: 1px solid #f1f5f9;
            color: #334155;
        }

        .accounts-table tr:last-child td {
            border-bottom: none;
        }

        .accounts-table tr:hover {
            background-color: #f8fafc;
        }

    .account-id {
        font-family: monospace;
        color: #4f46e5;
    }

    .account-balance {
        font-weight: 600;
        color: #10b981;
    }

    .manage-btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.5rem 1rem;
        background-color: #4f46e5;
        color: white;
        border-radius: 8px;
        font-size: 0.9rem;
        transition: all 0.2s;
        text-decoration: none;
    }

        .manage-btn:hover {
            background-color: #4338ca;
            transform: translateY(-2px);
            box-shadow: 0 2px 10px rgba(79, 70, 229, 0.3);
        }

        .manage-btn i {
            margin-right: 0.5rem;
        }

    .loading-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 200px;
    }

    .loading-spinner {
        font-size: 2rem;
        color: #4f46e5;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    .no-accounts {
        text-align: center;
        padding: 2rem;
        color: #64748b;
    }

    .new-account-btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.75rem 1.5rem;
        background: linear-gradient(135deg, #4f46e5, #7c3aed);
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 1rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s;
        box-shadow: 0 4px 15px rgba(79, 70, 229, 0.3);
    }

        .new-account-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(79, 70, 229, 0.4);
        }

        .new-account-btn i {
            margin-right: 0.5rem;
        }
</style>

<div class="accounts-container">
    <div class="accounts-header">
        <h1 class="accounts-title">لیست حساب‌ها</h1>
        <a href="/create-account" class="new-account-btn">
            <i class="fas fa-plus"></i>
            حساب جدید
        </a>
    </div>

    @if (accounts == null)
    {
        <div class="loading-container">
            <i class="fas fa-spinner loading-spinner"></i>
        </div>
    }
    else if (!accounts.Accounts.Any())
    {
        <div class="no-accounts">
            <i class="fas fa-wallet fa-2x mb-3"></i>
            <p>حسابی یافت نشد</p>
            <a href="/create-account" class="new-account-btn mt-2">
                <i class="fas fa-plus"></i>
                ایجاد حساب جدید
            </a>
        </div>
    }
    else
    {
        <div class="accounts-card">
            <table class="accounts-table">
                <thead>
                    <tr>
                        <th>عملیات</th>
                        <th>موجودی</th>
                        <th>نام حساب</th>
                        <th>شماره حساب</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var account in accounts.Accounts)
                    {
                        <tr>
                            <td>
                                <a href="/account/@account.AccuontId" class="manage-btn">
                                    <i class="fas fa-cog"></i>
                                    مدیریت
                                </a>
                            </td>
                            <td class="account-balance">@account.Balance.ToString("N0") تومان</td>
                            <td>@account.Name</td>
                            <td class="account-id">@account.AccuontId</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

    }
</div>

@code {
    private AccountDtos accounts;

    protected override async Task OnInitializedAsync()
    {
        accounts = await AccountService.GetAccountsAsync();
    }
}