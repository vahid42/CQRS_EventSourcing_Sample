@page "/account/{AccountId}"
@inject IAccountService AccountService

<style>
    .account-container {
        max-width: 800px;
        margin: 2rem auto;
        padding: 2rem;
        background: #ffffff;
        border-radius: 16px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
        font-family: 'Vazir', Tahoma, sans-serif;
        direction: rtl;
    }

    .account-header {
        color: #2c3e50;
        border-bottom: 2px solid #f1f3f6;
        padding-bottom: 1rem;
        margin-bottom: 2rem;
    }

    .account-info {
        background: #f8fafc;
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 2rem;
    }

    .info-item {
        display: flex;
        justify-content: space-between;
        margin-bottom: 1rem;
    }

    .info-label {
        color: #64748b;
        font-weight: 500;
    }

    .info-value {
        color: #1e293b;
        font-weight: 600;
    }

    .balance-value {
        color: #10b981;
        font-size: 1.2rem;
    }

    .transaction-form {
        background: #ffffff;
        border: 1px solid #e2e8f0;
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    }

    .form-title {
        color: #334155;
        margin-bottom: 1.5rem;
        font-size: 1.1rem;
    }

    .form-control {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 2px solid #e2e8f0;
        border-radius: 8px;
        font-size: 1rem;
        transition: all 0.3s;
        margin-bottom: 1.5rem;
        text-align: right;
    }

    .form-control:focus {
        border-color: #4f46e5;
        box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.2);
        outline: none;
    }

    .btn {
        padding: 0.75rem 1.5rem;
        border-radius: 8px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s;
        border: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

    .btn-deposit {
        background: linear-gradient(135deg, #10b981, #34d399);
        color: white;
        box-shadow: 0 4px 6px rgba(16, 185, 129, 0.2);
    }

    .btn-deposit:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 12px rgba(16, 185, 129, 0.3);
    }

    .btn-withdraw {
        background: linear-gradient(135deg, #f97316, #fb923c);
        color: white;
        box-shadow: 0 4px 6px rgba(249, 115, 22, 0.2);
    }

    .btn-withdraw:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 12px rgba(249, 115, 22, 0.3);
    }

    .btn-icon {
        margin-left: 0.5rem;
    }

    .loading {
        text-align: center;
        padding: 2rem;
        color: #64748b;
    }

    .divider {
        border-top: 1px dashed #e2e8f0;
        margin: 2rem 0;
    }
</style>

@if (account == null)
{
    <div class="loading">
        <i class="fas fa-spinner fa-spin fa-2x"></i>
        <p>در حال بارگذاری اطلاعات حساب...</p>
    </div>
}
else
{
    <div class="account-container">
        <div class="account-header">
            <h3>مدیریت حساب بانکی</h3>
        </div>

        <div class="account-info">
            <div class="info-item">
                <span class="info-label">شماره حساب:</span>
                <span class="info-value">@account.AccuontId</span>
            </div>
            <div class="info-item">
                <span class="info-label">نام حساب:</span>
                <span class="info-value">@account.Name</span>
            </div>
            <div class="info-item">
                <span class="info-label">موجودی:</span>
                <span class="info-value balance-value">@account.Balance.ToString("N0") تومان</span>
            </div>
        </div>

        <div class="transaction-form">
            <h4 class="form-title">واریز به حساب</h4>
            <EditForm Model="@depositRequest" OnValidSubmit="@HandleDeposit">
                <InputNumber class="form-control" @bind-Value="@depositRequest.Amount" placeholder="مبلغ واریز را وارد کنید" />
                <button type="submit" class="btn btn-deposit">
                    واریز وجه
                    <i class="fas fa-arrow-down btn-icon"></i>
                </button>
            </EditForm>
        </div>

        <div class="divider"></div>

        <div class="transaction-form">
            <h4 class="form-title">برداشت از حساب</h4>
            <EditForm Model="@withdrawRequest" OnValidSubmit="@HandleWithdraw">
                <InputNumber class="form-control" @bind-Value="@withdrawRequest.Amount" placeholder="مبلغ برداشت را وارد کنید" />
                <button type="submit" class="btn btn-withdraw">
                    برداشت وجه
                    <i class="fas fa-arrow-up btn-icon"></i>
                </button>
            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter]
    public string AccountId { get; set; }

    private AccountDto account;
    private RequestDepositWithdraw depositRequest = new();
    private RequestDepositWithdraw withdrawRequest = new();

    protected override async Task OnInitializedAsync()
    {
        account = await AccountService.GetAsync(Guid.Parse(AccountId));
        depositRequest.AccountId = Guid.Parse(AccountId);
        withdrawRequest.AccountId = Guid.Parse(AccountId);
    }

    private async Task HandleDeposit()
    {
        account = await AccountService.DepositAsync(depositRequest);
        depositRequest.Amount = 0;
    }

    private async Task HandleWithdraw()
    {
        account = await AccountService.WithdrawAsync(withdrawRequest);
        withdrawRequest.Amount = 0;
    }
}